/* 
this source was generated by vespene eclipse plugin
template file: springServiceImpl.ftl 
*/

package ${SpringServices.serviceImplementationPackage};

import java.util.Collection;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import ${SpringServices.serviceInterfacePackage}.${SpringServices.serviceInterfaceClassName};
import ${SpringServices.daoInterfacePackage}.${SpringServices.daoInterfaceClassName};

<#list SpringServices.entity as entity>
import ${entity.entityPackage};
</#list>

@Service("${SpringServices.serviceName}") 
public class ${SpringServices.serviceImplementationClassName} implements ${SpringServices.serviceInterfaceClassName} {   


	@Autowired
	private ${SpringServices.daoInterfaceClassName} dao; 
	
	private static final String SERVICE_BEAN_ID = "${SpringServices.serviceName}";	
	
	
	public ${SpringServices.serviceImplementationClassName}() {
		super();
	}
	
	public static ${SpringServices.serviceInterfaceClassName} getInstance(ApplicationContext context) {
		return (${SpringServices.serviceInterfaceClassName})context.getBean(SERVICE_BEAN_ID);
	}	

 

<#list SpringServices.entity as entity>

	@Override
	@Transactional
	public ${entity.entityName} find${entity.entityName}ById(${entity.pkType} id) throws Exception {
		try {
			return getDao().find${entity.entityName}ById(id);
		} catch (RuntimeException e) {
			throw new Exception("find${entity.pkType}ById failed with the id " + id + ": " + e.getMessage());
		}
	}
	

	@Override
	@Transactional
	public List<${entity.entityName}> findAll${entity.entityName}() throws Exception {
		try {
			return getDao().findAll${entity.entityName}();
		} catch (RuntimeException e) {
			throw new Exception("findAll${entity.entityName} failed: " + e.getMessage());
		}
	}	

	
	@Override
	@Transactional
	public List<${entity.entityName}> find${entity.entityName}ByExpressionQuery(String expression,	Map<String, Object> parameters, int firstResult, int maxResults) throws Exception {
		List<${entity.entityName}> list = null;
		try {
			list = getDao().find${entity.entityName}ByExpressionQuery(expression, parameters, firstResult, maxResults);
		} catch (RuntimeException e) {
			try {
				throw new Exception("find${entity.entityName}ByExpressionQuery failed: " + e.getMessage());
			} catch (Exception e1) {
				e1.printStackTrace();
			}
		}
		return list;	
	}	
	
	

	@Override
	@Transactional
	public int find${entity.entityName}ByExpressionRecordCount(String expression, Map<String, Object> parameters) throws Exception {
		try {
			return getDao().find${entity.entityName}ByExpressionRecordCount(expression, parameters);
		} catch (RuntimeException e) {
			throw new Exception("find${entity.entityName}ByExpressionRecordCount failed: " + e.getMessage());
		}
	}	


	@Override
	@Transactional
	public void persist${entity.entityName}(${entity.entityName} ${entity.entityName?lower_case}) throws Exception {
		try {
			getDao().persist${entity.entityName}(${entity.entityName?lower_case});
		} catch (RuntimeException e) {
			throw new Exception("persist${entity.entityName} failed: " + e.getMessage());
		}
	}

	@Override
	@Transactional
	public void remove${entity.entityName}(${entity.entityName} ${entity.entityName?lower_case}) throws Exception {
		try {
			getDao().remove${entity.entityName}(${entity.entityName?lower_case});
		} catch (RuntimeException e) {
			throw new Exception("remove${entity.entityName} failed: " + e.getMessage());
		}
	}
	

	@Override
	@Transactional
	public void removeCollection${entity.entityName}(Collection<${entity.entityName}> list${entity.entityName}) throws Exception {
		try {
			getDao().removeCollection${entity.entityName}(list${entity.entityName});
		} catch (RuntimeException e) {
			throw new Exception("removeCollection${entity.entityName} failed: " + e.getMessage());
		}
	}	

</#list>

	public ${SpringServices.daoInterfaceClassName} getDao() {
		return dao;
	}

	public void setDao(${SpringServices.daoInterfaceClassName} dao) {
		this.dao = dao;
	}  		

}